(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{911:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"简单说下什么是跨平台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单说下什么是跨平台"}},[t._v("#")]),t._v(" "),s("strong",[t._v("简单说下什么是跨平台")])]),t._v(" "),s("p",[s("strong",[t._v("操作系统的指令集，屏蔽系统之间的差异，（就是在操作系统之间加个虚拟机，提供统一的接口）")])]),t._v(" "),s("h1",{attrs:{id:"java有几种基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java有几种基本数据类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Java有几种基本数据类型")])]),t._v(" "),s("p",[s("strong",[t._v("byte、short、int、long、float、double、char、boolean")])]),t._v(" "),s("p",[s("strong",[t._v("1\t\t\t2\t\t  4\t\t8   \t  4\t  \t  8\t\t\t2 \t\t\t4")])]),t._v(" "),s("p",[s("strong",[t._v("0   \t\t 0\t\t   0    \t0\t\t0.0f\t\t0.0d\t'/u0000'\tfalse")])]),t._v(" "),s("h1",{attrs:{id:"面向对象特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象特征"}},[t._v("#")]),t._v(" "),s("strong",[t._v("面向对象特征")])]),t._v(" "),s("p",[s("strong",[t._v("封装、继承、多态、抽象")])]),t._v(" "),s("p",[s("strong",[t._v("封装：把一个物体的行为和、特征包装起来")])]),t._v(" "),s("p",[t._v("把对象的属性和行为封装在一个类中，"),s("code",[t._v("属性用变量")]),t._v("来定义，"),s("code",[t._v("行为用方法")]),t._v("定义，方法可以直接访问在同一个对象中的属性")]),t._v(" "),s("p",[s("strong",[t._v("抽象：把一个物体的行为和、特征抽象为方法和属性")])]),t._v(" "),s("p",[t._v("过程抽象：把鸟在飞翔（类的方法）")]),t._v(" "),s("p",[t._v("数据抽象：鸟的羽毛（类的属性）")]),t._v(" "),s("p",[s("strong",[t._v("继承：子类继承父类、可以拥有父类的方法和属性，属性（非private）。并且可以重写父类的方法，还可以添加自己独特的方法，但是耦合性很高")])]),t._v(" "),s("p",[s("strong",[t._v("多态：主要体现在重载和覆盖，在书写时，引用指向的类型、方法的调用类型不清楚，在运行时才知道")])]),t._v(" "),s("p",[t._v("方法的覆盖（重写）是子类和父类之间的关系，是垂直关系；方法的重载是同一个类中方法之间的关系，是水平关系。")]),t._v(" "),s("h1",{attrs:{id:"为什么要有包装类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有包装类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("为什么要有包装类型")])]),t._v(" "),s("p",[s("strong",[t._v("让基本类型也具有对象的特征")])]),t._v(" "),s("p",[s("strong",[t._v("常见的包装类型：")])]),t._v(" "),s("p",[s("strong",[t._v("byte-----\x3eByte")])]),t._v(" "),s("p",[s("strong",[t._v("short-----\x3eShort")])]),t._v(" "),s("p",[s("strong",[t._v("int-----\x3eInteger")])]),t._v(" "),s("p",[s("strong",[t._v("long-----\x3eLong")])]),t._v(" "),s("p",[s("strong",[t._v("float-----\x3eFloat")])]),t._v(" "),s("p",[s("strong",[t._v("double-----\x3eDouble")])]),t._v(" "),s("p",[s("strong",[t._v("char-----\x3eCharacter")])]),t._v(" "),s("p",[s("strong",[t._v("boolean-----\x3eBoolean")])]),t._v(" "),s("p",[t._v("为什么要有：因为在集合里我们放的是对象，包装类型可以让它变成对象，容器装的是object")]),t._v(" "),s("p",[t._v("在集合里放的是包装类型，不是基本类型，容器装的是object")]),t._v(" "),s("p",[t._v("自动装箱：new Integer    底层调用Integer.valueof(6)")]),t._v(" "),s("p",[t._v("自动拆箱：int i=new Integer(6)  底层调用i.intvalue(6)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("low "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("high"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("答案：true")]),t._v(" "),s("h2",{attrs:{id:"二者的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二者的区别"}},[t._v("#")]),t._v(" "),s("strong",[t._v("二者的区别：")])]),t._v(" "),s("p",[t._v("Integer i=6;")]),t._v(" "),s("p",[t._v("声明方式：底层实现原理：new Integer(6)")]),t._v(" "),s("p",[t._v("存储位置：基本类型放在栈中，包装类型放在堆中（需要new）,通过引用来调用")]),t._v(" "),s("p",[t._v("初始值：包装类型：null")]),t._v(" "),s("p",[t._v("使用方式:基本类型直接赋值用")]),t._v(" "),s("h1",{attrs:{id:"和equals区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和equals区别"}},[t._v("#")]),t._v(" "),s("strong",[t._v("==和equals区别")])]),t._v(" "),s("p",[t._v("String底层equals已经重写了（源码：String重写的equals不仅有内存地址的比较，还增加字符串长度的是否相同）")]),t._v(" "),s("p",[t._v("==一般用来比较引用指向对象是否相等（即内存空间在存储的位置是否一致），equals比较的是特征，也就是内容之间是否相等")]),t._v(" "),s("h1",{attrs:{id:"string、stringbuffer和stringbuilder区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string、stringbuffer和stringbuilder区别"}},[t._v("#")]),t._v(" String、StringBuffer和StringBuilder区别")]),t._v(" "),s("p",[t._v("StringBuilder：是线程不安全的，效率快，")]),t._v(" "),s("p",[t._v("StringBuffer(字符串缓冲区)：线程安全，同步")]),t._v(" "),s("p",[t._v("都继承了AbstractStringBuilder")]),t._v(" "),s("p",[t._v("StringBuilder、StringBuffer：char[] value")]),t._v(" "),s("p",[t._v("数据可变与不可变")]),t._v(" "),s("p",[t._v("String:  private final char value[] 底层使用**不可变的字符数组，**所以内容不可变")]),t._v(" "),s("p",[t._v("StringBuilder、StringBuffer都继承了"),s("strong",[t._v("AbstractStringBuilder")]),t._v(","),s("strong",[t._v("可变字符数组")]),t._v("，char[] value")]),t._v(" "),s("h1",{attrs:{id:"讲一下java中的集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讲一下java中的集合"}},[t._v("#")]),t._v(" 讲一下Java中的集合")]),t._v(" "),s("p",[t._v("Map、Collection：Map是Collection的补充，两者没什么关系")]),t._v(" "),s("p",[t._v("Collection ：List系（有序可重复）set系（无序不可重复）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//set 根据equals和hashcode来判断，一个对象要存储在set,就必须重写equals和hashcode")]),t._v("\n")])])]),s("p",[t._v("Map、HashMap(线程不同步) \t ConcurrentMap：并发映射(线程同步)")]),t._v(" "),s("h1",{attrs:{id:"arraylist和linkedlist区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist和linkedlist区别"}},[t._v("#")]),t._v(" ArrayList和LinkedList区别？")]),t._v(" "),s("p",[t._v("ArrayList实现了基于动态数组的数据结构，LinkedList实现了基于链表的数据结构")]),t._v(" "),s("p",[t._v("对于随机访问的get和set  ArrayList好，因为LinkedList要移动指针")]),t._v(" "),s("p",[t._v("对于数据的新增和删除  LinkedList好，因为ArrayList还要数据的移动")]),t._v(" "),s("h1",{attrs:{id:"concurrentmodificationexception异常出现的原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrentmodificationexception异常出现的原因"}},[t._v("#")]),t._v(" ConcurrentModificationException异常出现的原因")]),t._v(" "),s("p",[t._v("并发修改异常\tlist.remove（用集合删除）")]),t._v(" "),s("p",[t._v("应该用迭代器来删除")]),t._v(" "),s("h1",{attrs:{id:"hashmap和hashtable、concurrenthashmap区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap和hashtable、concurrenthashmap区别"}},[t._v("#")]),t._v(" HashMap和HashTable、ConcurrentHashMap区别？")]),t._v(" "),s("p",[t._v("相同点：都实现了Map接口，都可以存放key-value")]),t._v(" "),s("p",[t._v("HaspMap:线程不安全,效率快，key-value 可以存放null，"),s("strong",[t._v("迭代器（iterator）")]),t._v("：是"),s("strong",[t._v("fail-fast")]),t._v("迭代器（最快把错误抛出，停止运行，）")]),t._v(" "),s("p",[t._v("HashTable:线程安全 ，不可以存放null，"),s("strong",[t._v("迭代器（enumerator）")])]),t._v(" "),s("p",[t._v("CouncurrentHashMap：替代HashTable，"),s("strong",[t._v("把Map分成N个HashTable(N默认16)")])]),t._v(" "),s("p",[t._v("HashMap可以变成同步的")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map m=Collection.synchronizeMap(hashMap);")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\t解决线程安全问题的其中一种方案:使用同步代码块.\n因出现线程安全问题,会出现不存在的数据以及重复的数据,解决线程安全问题的其中一种方案:使用同步代码块.\n格式:\nsynchronized(锁对象){\n可能出现线程安全问题的代码(访问了共享数据的代码)\n}\n")])])])]),s("h1",{attrs:{id:"拷贝文件的工具类使用字节流还是字符流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝文件的工具类使用字节流还是字符流"}},[t._v("#")]),t._v(" 拷贝文件的工具类使用字节流还是字符流")]),t._v(" "),s("p",[t._v("字符流（图像、影视、音频一般没有字节流）")]),t._v(" "),s("h1",{attrs:{id:"线程创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程创建方式"}},[t._v("#")]),t._v(" 线程创建方式")]),t._v(" "),s("h2",{attrs:{id:"继承thread类-作为线程对象存在"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承thread类-作为线程对象存在"}},[t._v("#")]),t._v(" 继承Thread类，作为线程对象存在")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*\nCreatThreadDemo1 d1 = new CreatThreadDemo1("first");\nCreatThreadDemo1 d2 = new CreatThreadDemo1("second");\n\n        d1.start();\n        d2.start();\n实现run方法        \n')])])])]),s("h2",{attrs:{id:"实现runnable接口-作为线程任务存在"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现runnable接口-作为线程任务存在"}},[t._v("#")]),t._v(" 实现runnable接口，作为线程任务存在")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将线程任务传给线程对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动线程")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"匿名内部类创建线程对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匿名内部类创建线程对象"}},[t._v("#")]),t._v(" 匿名内部类创建线程对象")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建无参线程对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建带线程任务的线程对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建带线程任务并且重写run方法的线程对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runnable run 线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"override run 线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n最终只实现override run \n底层源码\nThread implements Runnable\nRunnable 接口里有一个run方法，所以是调用重写后的方法（Thread自己的run方法）  \n")])])])]),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/5786888-8fc80d17feb58198.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}}),t._v("\n，我们可以看到Thread实现了Runnable接口，而Runnable接口里有一个run方法。\n所以，我们最终调用的重写的方法应该是"),s("strong",[t._v("Thread类的run方法。而不是Runnable接口的run方法。")])]),t._v(" "),s("h2",{attrs:{id:"创建带返回值的线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建带返回值的线程"}},[t._v("#")]),t._v(" 创建带返回值的线程")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutionException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo4")]),t._v(" demo4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FutureTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FutureTask")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demo4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//FutureTask最终实现的是runnable接口")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我可以在这里做点别的业务逻辑...因为FutureTask是提前完成任务"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//拿出线程执行的返回值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程中运算的结果为:"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重写Callable接口的call方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"业务逻辑计算中..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Callable接口介绍：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Callable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * Computes a result, or throws an exception if unable to do so.\n     *\n     * @return computed result\n     * @throws Exception if unable to compute a result\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("返回指定泛型的call方法。然后调用FutureTask对象的get方法得到call方法的返回值")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"C:%5CUsers%5CLMQ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210723231539753.png",alt:"image-20210723231539753"}})]),t._v(" "),s("h2",{attrs:{id:"定时器timer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时器timer"}},[t._v("#")]),t._v(" 定时器Timer")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Timer")]),t._v(" timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Timer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"定时器线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//延迟0，周期1s")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"C:%5CUsers%5CLMQ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210723232058566.png",alt:"image-20210723232058566"}})]),t._v(" "),s("h2",{attrs:{id:"线程池创建线程-少用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池创建线程-少用"}},[t._v("#")]),t._v(" 线程池创建线程（少用）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatThreadDemo6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个具有10个线程的线程池")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" threadPool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" threadpoolUseTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            threadPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程执行了..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" threadpoolUseTime1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"多线程用时"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadpoolUseTime1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("threadpoolUseTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//销毁线程池")]),t._v("\n        threadPool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h1",{attrs:{id:"两个对象的hashcode相同-则equals也一定为true-对吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个对象的hashcode相同-则equals也一定为true-对吗"}},[t._v("#")]),t._v(" 两个对象的hashCode相同，则equals也一定为true，对吗？")]),t._v(" "),s("p",[t._v("不一定")]),t._v(" "),s("h2",{attrs:{id:"两个对象equals为true-则hashcode也一定相同-对吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个对象equals为true-则hashcode也一定相同-对吗"}},[t._v("#")]),t._v(" 两个对象equals为true，则hashCode也一定相同，对吗？")]),t._v(" "),s("p",[t._v("官方来说：是相同的，非官方：也就是自己没有重写hashcode方法，结果可能不相等")]),t._v(" "),s("h1",{attrs:{id:"java线程池用过没有"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java线程池用过没有"}},[t._v("#")]),t._v(" java线程池用过没有？")]),t._v(" "),s("p",[t._v("Executors")]),t._v(" "),s("p",[t._v("newFixedThreadPool()固定大小的线程池")]),t._v(" "),s("p",[t._v("newCachedThreadPool()无限大的线程池")]),t._v(" "),s("p",[t._v("newSingleThreadPool()单一的线程池")]),t._v(" "),s("p",[t._v("newScheduledThreadPool()固定大小的线程池，可以延迟或定时执行任务")]),t._v(" "),s("h2",{attrs:{id:"线程池作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池作用"}},[t._v("#")]),t._v(" 线程池作用")]),t._v(" "),s("p",[t._v("限制线程个数，避免出现线程过多系统出现运行缓慢或崩溃")]),t._v(" "),s("p",[t._v("避免出现频繁创建和销毁，节约资源，响应更快")]),t._v(" "),s("h1",{attrs:{id:"math-round-2-5-等于多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-round-2-5-等于多少"}},[t._v("#")]),t._v(" Math.round(-2.5)等于多少？")]),t._v(" "),s("p",[t._v("+0.5向下取整   -2.5+0.5=-2")]),t._v(" "),s("p",[t._v("-2.6+0.5=-2.1=-3(向下)")]),t._v(" "),s("p",[t._v("2.6+0.5=3.1=3（向下）")]),t._v(" "),s("h1",{attrs:{id:"面向对象六大原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象六大原则"}},[t._v("#")]),t._v(" 面向对象六大原则")]),t._v(" "),s("p",[t._v("接单依赖迪里开")]),t._v(" "),s("p",[t._v("接口隔离(ISP)：把接口分成满足依赖关系的最小接口，实现类不能有不需要的方法")]),t._v(" "),s("p",[t._v("单一职责(SRP)：每个类只专注与自己的方法")]),t._v(" "),s("p",[t._v("依赖倒置(DIP)：调用的是接口，不是具体的实现类")]),t._v(" "),s("p",[t._v("里氏替换(LSP)：重写父类，扩展性高，但不可改变原来父类拥有的方法")]),t._v(" "),s("p",[t._v("开闭原则（OCP）：对象中的（类，函数，模块）对外可扩展，对修改关闭")]),t._v(" "),s("p",[t._v("迪米特(LOD)：高内聚，低耦合")]),t._v(" "),s("p",[t._v("高内聚：简单来说就是单一职责")]),t._v(" "),s("h1",{attrs:{id:"static和final区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static和final区别"}},[t._v("#")]),t._v(" static和final区别")]),t._v(" "),s("p",[t._v("final：最终的，不可变")]),t._v(" "),s("p",[t._v("1、放在常量池中，程序不可修改")]),t._v(" "),s("p",[t._v("2、不可以被继承")]),t._v(" "),s("p",[t._v("3、子类不能被重写")]),t._v(" "),s("p",[t._v("static：静态的")]),t._v(" "),s("p",[t._v("1、分配在堆，只分配一次内存")]),t._v(" "),s("p",[t._v("2、直接类点来调用，不用new")]),t._v(" "),s("p",[t._v("3、方法块，虚拟机优先加载")]),t._v(" "),s("h1",{attrs:{id:"string-s-hello-和string-s-new-string-hello-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-s-hello-和string-s-new-string-hello-区别"}},[t._v("#")]),t._v(' String s = "hello"和String s = new String("hello");区别')]),t._v(" "),s("p",[t._v('String s="hello" ：首先查找常量池里有没有，没有则分配（只是分配，没有new）空间，（过程不涉及new 堆）')]),t._v(" "),s("p",[t._v("String s=new String(:hello) ：先new 在找，没有在new （可能new 两次,这个常量池没有要new）")]),t._v(" "),s("h1",{attrs:{id:"引用类型是占用几个字节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用类型是占用几个字节"}},[t._v("#")]),t._v(" 引用类型是占用几个字节？")]),t._v(" "),s("p",[t._v("64位平台占8个字节，32位占4个字节")]),t._v(" "),s("h1",{attrs:{id:"_1-3-a-b-3-4和-1-3-a-b-3-4-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-a-b-3-4和-1-3-a-b-3-4-区别"}},[t._v("#")]),t._v(" "),s("code",[t._v('(1<3)?"a":"b")+3+4')]),t._v("和"),s("code",[t._v('(1<3)?"a":"b")+(3+4)')]),t._v("区别")]),t._v(" "),s("p",[t._v("a34")]),t._v(" "),s("p",[t._v("a7")]),t._v(" "),s("h2",{attrs:{id:"什么情况下-加号会变成字符串连接符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下-加号会变成字符串连接符"}},[t._v("#")]),t._v(" 什么情况下,加号会变成字符串连接符")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 + 2 = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 + 2 = 12")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 + 2 = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 + 2 = 3")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" = 1 + 2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 = 1 + 2")]),t._v("\n")])])]),s("ol",[s("li",[s("code",[t._v("+")]),t._v("在没有碰到字符串的时候，作用是数值运算的加法作用，当"),s("strong",[t._v("第一次遇到字符串的时候")]),t._v("，将成为字符串连接符，其"),s("strong",[t._v("后所有的量都将先被转换为字符串然后做拼接。")])]),t._v(" "),s("li",[t._v("括号的优先级高于字符串连接符。")])]),t._v(" "),s("h1",{attrs:{id:"java中的switch选择结构可以使用数据类型的数据-jdk1-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java中的switch选择结构可以使用数据类型的数据-jdk1-8"}},[t._v("#")]),t._v(" java中的switch选择结构可以使用数据类型的数据(JDK1.8)")]),t._v(" "),s("p",[t._v("String enum")]),t._v(" "),s("p",[t._v("byte short int char Byte Short Integer Character")]),t._v(" "),s("p",[t._v("这些不是long float double boolean，（其包装类型也不是）")]),t._v(" "),s("h1",{attrs:{id:"_4-5-4-5-4-10-1各等于多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-5-4-10-1各等于多少"}},[t._v("#")]),t._v(" "),s("code",[t._v("4&5``4^5``4&10>>1")]),t._v("各等于多少")]),t._v(" "),s("p",[t._v("&全是1才是1")]),t._v(" "),s("p",[t._v("4&5 0100 0101 --\x3e0100=4")]),t._v(" "),s("p",[t._v("^不同的就是1")]),t._v(" "),s("p",[t._v("4^5 0100 0101 ----\x3e0001")]),t._v(" "),s("p",[t._v("10>>1 右移 方法：右移1就除2  右移2就两次2")]),t._v(" "),s("p",[t._v("4&10>>1  :优先级  单目乘除为关系  逻辑三目后赋值")]),t._v(" "),s("p",[t._v("为：>>  逻辑：&")]),t._v(" "),s("h2",{attrs:{id:"_4-5等于多少呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5等于多少呢"}},[t._v("#")]),t._v(" "),s("code",[t._v("4|5")]),t._v("等于多少呢")]),t._v(" "),s("p",[t._v("|有1得1")]),t._v(" "),s("p",[t._v("0100 0101  0101=5")]),t._v(" "),s("h2",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("p",[t._v("单目乘除为关系，逻辑三目后赋值")]),t._v(" "),s("p",[t._v("单目：+   -")]),t._v(" "),s("p",[t._v("为：~按位取反、左移<<     >>右移")]),t._v(" "),s("p",[t._v("关系：>=  <= != < >")]),t._v(" "),s("p",[t._v("逻辑：&   |")]),t._v(" "),s("p",[t._v('三目：A>B ? "":""')]),t._v(" "),s("p",[t._v("赋值：=  +=  -=  *=  /=")]),t._v(" "),s("h1",{attrs:{id:"某些java类为什么要实现serializable接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#某些java类为什么要实现serializable接口"}},[t._v("#")]),t._v(" 某些java类为什么要实现Serializable接口")]),t._v(" "),s("p",[t._v("为了网络进行传输或者持久化")]),t._v(" "),s("h2",{attrs:{id:"什么是序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是序列化"}},[t._v("#")]),t._v(" 什么是序列化")]),t._v(" "),s("p",[t._v("将对象的状态信息转换为可以存储和传输形式的过程")]),t._v(" "),s("h2",{attrs:{id:"除了实现serializable接口还有什么序列化方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#除了实现serializable接口还有什么序列化方式"}},[t._v("#")]),t._v(" 除了实现Serializable接口还有什么序列化方式")]),t._v(" "),s("p",[t._v("Json序列化")]),t._v(" "),s("p",[t._v("FastJson序列化")]),t._v(" "),s("p",[t._v("ProtoBuff序列化")]),t._v(" "),s("h1",{attrs:{id:"记忆方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记忆方法"}},[t._v("#")]),t._v(" 记忆方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("口诀")]),t._v(" "),s("th",[t._v("额外")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("六个原则")]),t._v(" "),s("td",[t._v("接单依赖迪里开")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td",[t._v("创建型模型")]),t._v(" "),s("td",[t._v("抽工建单元")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td",[t._v("结构型模型")]),t._v(" "),s("td",[t._v("与时代相结合，装外向")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td",[t._v("行为型模型")]),t._v(" "),s("td",[t._v("责令中介观叠被，防撞车")]),t._v(" "),s("td",[t._v("模板方法模式")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);